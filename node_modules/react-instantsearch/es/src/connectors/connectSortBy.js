var _extends=Object.assign||function(a){for(var c,b=1;b<arguments.length;b++)for(var d in c=arguments[b],c)Object.prototype.hasOwnProperty.call(c,d)&&(a[d]=c[d]);return a};function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}import PropTypes from'prop-types';import{cleanUpValue,refineValue,getCurrentRefinementValue}from'../core/indexUtils';import createConnector from'../core/createConnector';function getId(){return'sortBy'}function getCurrentRefinement(a,b,c){var d=getId(a);return getCurrentRefinementValue(a,b,c,d,null,function(e){return e?e:null})}export default createConnector({displayName:'AlgoliaSortBy',propTypes:{defaultRefinement:PropTypes.string,items:PropTypes.arrayOf(PropTypes.shape({label:PropTypes.string,value:PropTypes.string.isRequired})).isRequired,transformItems:PropTypes.func},getProvidedProps:function getProvidedProps(a,b){var c=getCurrentRefinement(a,b,this.context),d=a.items.map(function(e){return e.value===c?_extends({},e,{isRefined:!0}):_extends({},e,{isRefined:!1})});return{items:a.transformItems?a.transformItems(d):d,currentRefinement:c}},refine:function refine(a,b,c){var d=getId(),e=_defineProperty({},d,c);return refineValue(b,e,this.context,!0)},cleanUp:function cleanUp(a,b){return cleanUpValue(b,this.context,getId())},getSearchParameters:function getSearchParameters(a,b,c){var d=getCurrentRefinement(b,c,this.context);return a.setIndex(d)},getMetadata:function getMetadata(){return{id:getId()}}});
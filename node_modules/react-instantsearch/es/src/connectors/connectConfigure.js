import _keys from'lodash/keys';import _difference from'lodash/difference';import _omit from'lodash/omit';var _extends=Object.assign||function(a){for(var c,b=1;b<arguments.length;b++)for(var d in c=arguments[b],c)Object.prototype.hasOwnProperty.call(c,d)&&(a[d]=c[d]);return a};function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}import createConnector from'../core/createConnector.js';import{hasMultipleIndex,getIndex,refineValue}from'../core/indexUtils';function getId(){return'configure'}export default createConnector({displayName:'AlgoliaConfigure',getProvidedProps:function getProvidedProps(){return{}},getSearchParameters:function getSearchParameters(a,b){var c=_omit(b,'children');return a.setQueryParameters(c)},transitionState:function transitionState(a,b,c){var d=getId(),e=_omit(a,'children'),f=this._props?_difference(_keys(this._props),_keys(a)):[];this._props=a;var g=_defineProperty({},d,_extends({},_omit(c[d],f),e));return refineValue(c,g,this.context)},cleanUp:function cleanUp(a,b){var c=getId(),d=getIndex(this.context),e=hasMultipleIndex(this.context)&&b.indices?b.indices[d]:b,f=e&&e[c]?Object.keys(e[c]):[],g=f.reduce(function(j,k){return a[k]||(j[k]=e[c][k]),j},{}),h=_defineProperty({},c,g);return refineValue(b,h,this.context)}});
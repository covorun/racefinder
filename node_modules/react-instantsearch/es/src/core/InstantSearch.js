var _extends=Object.assign||function(a){for(var c,b=1;b<arguments.length;b++)for(var d in c=arguments[b],c)Object.prototype.hasOwnProperty.call(c,d)&&(a[d]=c[d]);return a},_createClass=function(){function a(b,c){for(var e,d=0;d<c.length;d++)e=c[d],e.enumerable=e.enumerable||!1,e.configurable=!0,'value'in e&&(e.writable=!0),Object.defineProperty(b,e.key,e)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')}function _possibleConstructorReturn(a,b){if(!a)throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');return b&&('object'==typeof b||'function'==typeof b)?b:a}function _inherits(a,b){if('function'!=typeof b&&null!==b)throw new TypeError('Super expression must either be null or a function, not '+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}import PropTypes from'prop-types';import React,{Component,Children}from'react';import createInstantSearchManager from'./createInstantSearchManager';function validateNextProps(a,b){if(!a.searchState&&b.searchState)throw new Error('You can\'t switch <InstantSearch> from being uncontrolled to controlled');else if(a.searchState&&!b.searchState)throw new Error('You can\'t switch <InstantSearch> from being controlled to uncontrolled')}var InstantSearch=function(a){function b(c){_classCallCheck(this,b);var d=_possibleConstructorReturn(this,(b.__proto__||Object.getPrototypeOf(b)).call(this,c));d.isControlled=!!c.searchState;var e=d.isControlled?c.searchState:{};return d.isUnmounting=!1,d.aisManager=createInstantSearchManager({indexName:c.indexName,searchParameters:c.searchParameters,algoliaClient:c.algoliaClient,initialState:e}),d}return _inherits(b,a),_createClass(b,[{key:'componentWillReceiveProps',value:function componentWillReceiveProps(c){validateNextProps(this.props,c),this.props.indexName!==c.indexName&&this.aisManager.updateIndex(c.indexName),this.props.algoliaClient!==c.algoliaClient&&this.aisManager.updateClient(c.algoliaClient),this.isControlled&&this.aisManager.onExternalStateUpdate(c.searchState)}},{key:'componentWillUnmount',value:function componentWillUnmount(){this.isUnmounting=!0,this.aisManager.skipSearch()}},{key:'getChildContext',value:function getChildContext(){return this._aisContextCache||(this._aisContextCache={ais:{onInternalStateUpdate:this.onWidgetsInternalStateUpdate.bind(this),createHrefForState:this.createHrefForState.bind(this),onSearchForFacetValues:this.onSearchForFacetValues.bind(this),onSearchStateChange:this.onSearchStateChange.bind(this)}}),{ais:_extends({},this._aisContextCache.ais,{store:this.aisManager.store,widgetsManager:this.aisManager.widgetsManager,mainTargetedIndex:this.props.indexName})}}},{key:'createHrefForState',value:function createHrefForState(c){return c=this.aisManager.transitionState(c),this.isControlled&&this.props.createURL?this.props.createURL(c,this.getKnownKeys()):'#'}},{key:'onWidgetsInternalStateUpdate',value:function onWidgetsInternalStateUpdate(c){c=this.aisManager.transitionState(c),this.onSearchStateChange(c),this.isControlled||this.aisManager.onExternalStateUpdate(c)}},{key:'onSearchStateChange',value:function onSearchStateChange(c){this.props.onSearchStateChange&&!this.isUnmounting&&this.props.onSearchStateChange(c)}},{key:'onSearchForFacetValues',value:function onSearchForFacetValues(c){this.aisManager.onSearchForFacetValues(c)}},{key:'getKnownKeys',value:function getKnownKeys(){return this.aisManager.getWidgetsIds()}},{key:'render',value:function render(){var c=Children.count(this.props.children),d=this.props.root,e=d.Root,f=d.props;return 0===c?null:React.createElement(e,f,this.props.children)}}]),b}(Component);InstantSearch.propTypes={indexName:PropTypes.string.isRequired,algoliaClient:PropTypes.object.isRequired,searchParameters:PropTypes.object,createURL:PropTypes.func,searchState:PropTypes.object,onSearchStateChange:PropTypes.func,children:PropTypes.node,root:PropTypes.shape({Root:PropTypes.oneOfType([PropTypes.string,PropTypes.func]),props:PropTypes.object}).isRequired},InstantSearch.childContextTypes={ais:PropTypes.object.isRequired};export default InstantSearch;
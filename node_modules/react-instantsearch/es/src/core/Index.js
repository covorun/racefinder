var _createClass=function(){function a(b,c){for(var e,d=0;d<c.length;d++)e=c[d],e.enumerable=e.enumerable||!1,e.configurable=!0,'value'in e&&(e.writable=!0),Object.defineProperty(b,e.key,e)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')}function _possibleConstructorReturn(a,b){if(!a)throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');return b&&('object'==typeof b||'function'==typeof b)?b:a}function _inherits(a,b){if('function'!=typeof b&&null!==b)throw new TypeError('Super expression must either be null or a function, not '+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}import PropTypes from'prop-types';import React,{Component,Children}from'react';var Index=function(a){function b(c,d){_classCallCheck(this,b);var e=_possibleConstructorReturn(this,(b.__proto__||Object.getPrototypeOf(b)).call(this,c)),f=d.ais.widgetsManager;return e.unregisterWidget=f.registerWidget({getSearchParameters:function getSearchParameters(g){return e.getSearchParameters(g,e.props)},multiIndexContext:{targetedIndex:e.props.indexName}}),e}return _inherits(b,a),_createClass(b,[{key:'componentWillUnmount',value:function componentWillUnmount(){this.unregisterWidget()}},{key:'getChildContext',value:function getChildContext(){return{multiIndexContext:{targetedIndex:this.props.indexName}}}},{key:'getSearchParameters',value:function getSearchParameters(c,d){return c.setIndex(d.indexName)}},{key:'render',value:function render(){var c=Children.count(this.props.children),d=this.props.root,e=d.Root,f=d.props;return 0===c?null:React.createElement(e,f,this.props.children)}}]),b}(Component);Index.propTypes={indexName:PropTypes.string.isRequired,children:PropTypes.node,root:PropTypes.shape({Root:PropTypes.oneOfType([PropTypes.string,PropTypes.func]),props:PropTypes.object}).isRequired},Index.childContextTypes={multiIndexContext:PropTypes.object.isRequired},Index.contextTypes={ais:PropTypes.object.isRequired};export default Index;
import _isNaN from'lodash/isNaN';var _extends=Object.assign||function(a){for(var c,b=1;b<arguments.length;b++)for(var d in c=arguments[b],c)Object.prototype.hasOwnProperty.call(c,d)&&(a[d]=c[d]);return a},_createClass=function(){function a(b,c){for(var f,d=0;d<c.length;d++)f=c[d],f.enumerable=f.enumerable||!1,f.configurable=!0,'value'in f&&(f.writable=!0),Object.defineProperty(b,f.key,f)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')}function _possibleConstructorReturn(a,b){if(!a)throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');return b&&('object'==typeof b||'function'==typeof b)?b:a}function _inherits(a,b){if('function'!=typeof b&&null!==b)throw new TypeError('Super expression must either be null or a function, not '+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}import PropTypes from'prop-types';import React,{Component}from'react';import translatable from'../core/translatable';import classNames from'./classNames.js';var cx=classNames('RangeInput'),RangeInput=function(a){function b(c){_classCallCheck(this,b);var d=_possibleConstructorReturn(this,(b.__proto__||Object.getPrototypeOf(b)).call(this,c));return d.onSubmit=function(f){f.preventDefault(),f.stopPropagation(),_isNaN(parseFloat(d.state.from,10))||_isNaN(parseFloat(d.state.to,10))||d.props.refine({min:d.state.from,max:d.state.to})},d.state=d.props.canRefine?{from:c.currentRefinement.min,to:c.currentRefinement.max}:{from:'',to:''},d}return _inherits(b,a),_createClass(b,[{key:'componentWillMount',value:function componentWillMount(){this.context.canRefine&&this.context.canRefine(this.props.canRefine)}},{key:'componentWillReceiveProps',value:function componentWillReceiveProps(c){c.canRefine&&this.setState({from:c.currentRefinement.min,to:c.currentRefinement.max}),this.context.canRefine&&this.context.canRefine(c.canRefine)}},{key:'render',value:function render(){var c=this,d=this.props,f=d.translate,g=d.canRefine;return React.createElement('form',_extends({},cx('root',!g&&'noRefinement'),{onSubmit:this.onSubmit}),React.createElement('fieldset',_extends({disabled:!g},cx('fieldset')),React.createElement('label',cx('labelMin'),React.createElement('input',_extends({},cx('inputMin'),{type:'number',value:this.state.from,onChange:function onChange(h){return c.setState({from:h.target.value})}}))),React.createElement('span',cx('separator'),f('separator')),React.createElement('label',cx('labelMax'),React.createElement('input',_extends({},cx('inputMax'),{type:'number',value:this.state.to,onChange:function onChange(h){return c.setState({to:h.target.value})}}))),React.createElement('button',_extends({},cx('submit'),{type:'submit'}),f('submit'))))}}]),b}(Component);RangeInput.propTypes={translate:PropTypes.func.isRequired,refine:PropTypes.func.isRequired,min:PropTypes.number,max:PropTypes.number,currentRefinement:PropTypes.shape({min:PropTypes.number,max:PropTypes.number}),canRefine:PropTypes.bool.isRequired},RangeInput.contextTypes={canRefine:PropTypes.func};export default translatable({submit:'ok',separator:'to'})(RangeInput);
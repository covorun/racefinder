'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = createStore;
function createStore(helper) {
  var state = {
    searching: false,
    searchParameters: helper.getState(),
    searchResults: null,
    searchResultsSearchParameters: null,
    searchError: null
  };
  var listeners = [];
  var dispatch = function dispatch() {
    listeners.forEach(function (listener) {
      return listener();
    });
  };

  helper.on('change', function (searchParameters) {
    state = _extends({}, state, {
      searchParameters: searchParameters
    });
    dispatch();
  });

  helper.on('search', function () {
    state = _extends({}, state, {
      searching: true
    });
    dispatch();
  });

  helper.on('result', function (searchResults, searchParameters) {
    state = _extends({}, state, {
      searching: false,
      searchResults: searchResults,
      searchResultsSearchParameters: searchParameters
    });
    dispatch();
  });

  helper.on('error', function (searchError) {
    state = _extends({}, state, {
      searching: false,
      searchError: searchError
    });
    dispatch();
  });

  return {
    getHelper: function getHelper() {
      return helper;
    },
    getState: function getState() {
      return state;
    },
    subscribe: function subscribe(listener) {
      listeners.push(listener);
      return function unsubscribe() {
        listeners.splice(listeners.indexOf(listener));
      };
    }
  };
}